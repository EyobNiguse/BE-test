version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: backend
    ports:
      - "5000:5000"
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://mongo:27017/mydb
    depends_on:
      mongo:
        condition: service_started
      redis:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend
    ports:
      - "3000:3000"
    command: npm run dev
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=development
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  mongo_data:
